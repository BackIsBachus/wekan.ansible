---
# tasks/nginx.yml: Nginx management tasks for Wekan.Ansible

  - name: Grant Nginx permissions to proxy requests to an upstream [SELinux]
    shell: setsebool httpd_can_network_connect on -P
    changed_when: false
    when: (ansible_selinux is defined) and
          (ansible_selinux.status != "disabled")

  - name: Ensure Nginx is present
    package: name=nginx state=present

  - name: Deploy Nginx configuration
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: nginx.conf.j2, dest: /etc/nginx/nginx.conf }
      - { src: wekan.conf.j2, dest: /etc/nginx/conf.d/wekan.conf }
    notify: Reload the Nginx service

  - name: Ensure provided SSL certs have been deployed
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    when: not wekan_ssl_generate_certs|bool and
          wekan_ssl_deploy_data|bool
    with_items:
      - src: "{{ wekan_ssl_key_file }}"
        dest: "{{ wekan_ssl_key_path }}"
      - src: "{{ wekan_ssl_cert_file }}"
        dest: "{{ wekan_ssl_cert_path }}"
    notify: Reload the Nginx service

  - name: Ensure SSL certs have been generated
    shell: >-
      openssl req -x509 -newkey rsa:4096 -nodes
      -subj "/CN={{ wekan_service_host }}/
      /C=NA/ST=NA/L=NA/O=NA/OU=NA"
      -keyout {{ wekan_ssl_key_path }}
      -out {{ wekan_ssl_cert_path }}
      -days 3650
    when: wekan_ssl_generate_certs|bool
    args:
      creates: "{{ wekan_ssl_key_path }}"
    notify: Reload the Nginx service

  - name: Ensure provided PFS key has been deployed
    copy:
      src: "{{ wekan_nginx_pfs_file }}"
      dest: "{{ wekan_nginx_pfs_key_path }}"
    when: not wekan_nginx_generate_pfs_key
    notify: Reload the Nginx service

  - name: Ensure the PFS key has been generated (this can take a while!)
    shell: >-
      openssl dhparam -out {{ wekan_nginx_pfs_key_path }}
      {{ wekan_nginx_pfs_key_numbits }}
    when: wekan_nginx_generate_pfs_key|bool
    args:
      creates: "{{ wekan_nginx_pfs_key_path }}"
    notify: Reload the Nginx service

  - name: Ensure the Nginx service is running/enabled
    service: name=nginx state=started enabled=true
