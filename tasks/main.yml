---
# tasks/main.yml: Main tasks for Wekan.Ansible

  - include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}.yml"
      - "{{ ansible_os_family }}.yml"
    tags: vars

  - include: repo_RedHat.yml
    when: ansible_os_family == "RedHat"
    tags: repo

  - name: Ensure APT cache has been updated recently
    apt: update_cache=yes cache_valid_time=3600
    when: ansible_os_family == "Debian"

  - include: mongodb.yml
    when: wekan_include_mongodb|bool
    tags: mongodb

  - name: Ensure the Wekan service group is present
    group:
      name: "{{ wekan_service_group }}"
      state: present
      system: true

  - name: Ensure the Wekan service user is present
    user:
      comment: Wekan Service User
      name: "{{ wekan_service_user }}"
      group: "{{ wekan_service_group }}"
      home: "{{ wekan_application_path }}"
      createhome: true
      shell: /bin/false
      state: present
      system: true

  - name: Ensure Wekan dependencies are installed
    package:
      name: "{{ wekan_dep_packages }}"
      state: present

  - name: Ensure link /bin/node -> /bin/nodejs exists
    file:
      src: /bin/node
      dest: /bin/nodejs
      state: link
    when: ansible_os_family == "RedHat"

  - name: Ensure n (NodeJS) is installed
    npm:
      name: n
      global: true
      executable: "{{ wekan_original_npm }}"

  - name: Ensure Forever (NodeJS) is installed
    npm:
      name: forever
      global: yes
      executable: "{{ wekan_original_npm }}"
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")

  - name: Check to see if n has installed the required 'node' binary
    stat:
      path: "{{ wekan_node_10_40_path }}/node"
    register: n_10_40_node_bin

  - name: Install the 0.10.40 NodeJS environment via n
    shell: n 0.10.40
    when: not n_10_40_node_bin.stat.exists|bool

  - name: "Configure /etc/hosts"
    lineinfile:
      dest: /etc/hosts
      line:  "127.0.0.1    {{ ansible_fqdn }}    {{ ansible_hostname }}"
      regexp: '^127.0.0.1'

  - name: Check to see if this is the initial Wekan deployment
    stat:
      path: "{{ wekan_application_path }}/bundle"
    register: wekan_deploy_state

  - name: Set the initial Wekan upgrade status
    set_fact:
      wekan_upgraded: false

  - name: Fetch the Wekan binary tarball
    get_url:
      url: "{{ wekan_tarball_remote }}"
      sha256sum: "{{ wekan_tarball_sha256sum }}"
      dest: "{{ wekan_application_path }}/wekan-{{ wekan_version }}.tgz"
      timeout: "{{ wekan_tarball_fetch_timeout }}"
      validate_certs: "{{ wekan_tarball_validate_remote_cert }}"
    notify: Upgrade Wekan
    become: true
    become_user: "{{ wekan_service_user }}"

  - meta: flush_handlers

  - name: Unpack the Wekan binary tarball
    unarchive:
      copy: false
      src: "{{ wekan_application_path }}/wekan-{{ wekan_version }}.tgz"
      dest: "{{ wekan_application_path }}"
      creates: "{{ wekan_application_path }}/bundle"
    become: true
    become_user: "{{ wekan_service_user }}"
    tags: build

  - name: Install Wekan via NPM
    npm:
      state: present
      path: "{{ wekan_application_path }}/bundle/programs/server"
      executable: "{{ wekan_original_npm }}"
    become: true
    become_user: "{{ wekan_service_user }}"
    tags: build

  - name: Check to see if the Wekan log file is present
    stat: path=/var/log/wekan.log
    register: wekan_log_file_state
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")

  - name: Ensure the Wekan log file is present
    file:
      path: /var/log/wekan.log
      state: touch
      owner: "{{ wekan_service_user }}"
      group: "{{ wekan_service_group }}"
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")
          and not wekan_log_file_state.stat.exists

  - name: Check to see if the Wekan pid file is present
    stat: path=/var/run/wekan.pid
    register: wekan_pid_file_state
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")

  - name: Ensure the Wekan pid file is present
    file:
      path: /var/run/wekan.pid
      state: touch
      owner: "{{ wekan_service_user }}"
      group: "{{ wekan_service_group }}"
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")
          and not wekan_pid_file_state.stat.exists

  - name: Ensure the Wekan application data permissions are correct
    file:
      path: "{{ wekan_application_path }}"
      state: directory
      owner: "{{ wekan_service_user }}"
      group: "{{ wekan_service_user }}"
      recurse: true
    tags: build

  - include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_distribution }}.yml"
      - "{{ ansible_os_family }}.yml"
    tags: service

  - name: Deploy the Wekan service file
    template:
      src: "{{ wekan_service_template.src }}"
      dest: "{{ wekan_service_template.dest }}"
    notify: Update the Wekan service configuration
    tags: service

  - meta: flush_handlers

  - name: Ensure the MongoDB replSets have been initiated
    shell: >-
      mongo --eval 'rs.initiate()' &&
      touch .mongo_rs_initialised
    become: yes
    become_user: mongodb
    args:
      chdir: /var/lib/mongodb
      creates: /var/lib/mongodb/.mongo_rs_initialised
    when: wekan_include_mongodb|bool

  - name: Restart the Wekan service [UPGRADE]
    service: name=wekan state=restarted
    when: wekan_upgraded|bool

  - name: Ensure the Wekan service is running/enabled
    service: name=wekan state=started enabled=true
    tags: service

  - include: nginx.yml
    when: wekan_include_nginx|bool
    tags: nginx
